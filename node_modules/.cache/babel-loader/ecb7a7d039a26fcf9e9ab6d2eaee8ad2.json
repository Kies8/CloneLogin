{"ast":null,"code":"const utilities = {\n  checkPersonal: input => {\n    if (input !== undefined) {\n      return /^[\\p{L}\\p{N}*-]+$/u.test(input);\n    }\n\n    ;\n  },\n  checkEmailValidity: email => {\n    if (email !== undefined) {\n      return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n    }\n\n    ;\n  },\n  checkPasswordValidity: password => {\n    if (password !== undefined) {\n      return /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.,!@#$%^&*])(?=.{8,})/.test(password);\n    }\n\n    ;\n  },\n  checkConfirmPasswordValidity: (password, confirmPassword) => {\n    if (password !== undefined && confirmPassword !== undefined) {\n      return password === confirmPassword;\n    }\n  },\n  checkGender: gender => {\n    if (gender !== undefined && gender !== '') {\n      return true;\n    }\n  },\n  checkDate: date => {\n    // let today = (new Date()).toISOString().slice(0, 10)\n    // console.log(\"data di oggi\", today) // 2021/09/13\n    let yearsAgo = new Date().setFullYear(new Date().getFullYear() - 16);\n    console.log('data:', yearsAgo);\n    console.log('date in arg:', new Date(date).getTime() / 1000);\n\n    if (date !== undefined && date > yearsAgo) {\n      return true;\n    }\n  },\n  generateCode: () => {\n    return Math.floor(Math.random() * (99999 - 10000) + 10000);\n  },\n  checkCode: (code, codeInput) => {\n    return code === codeInput;\n  }\n};\nexport default utilities;","map":{"version":3,"sources":["/Users/lorenzochiesa/Desktop/clonelogin/src/utilities/utilities.js"],"names":["utilities","checkPersonal","input","undefined","test","checkEmailValidity","email","checkPasswordValidity","password","checkConfirmPasswordValidity","confirmPassword","checkGender","gender","checkDate","date","yearsAgo","Date","setFullYear","getFullYear","console","log","getTime","generateCode","Math","floor","random","checkCode","code","codeInput"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,aAAa,EAAGC,KAAD,IAAW;AACtB,QAAIA,KAAK,KAAKC,SAAd,EAAyB;AACrB,aAAO,qBAAqBC,IAArB,CAA0BF,KAA1B,CAAP;AACH;;AAAA;AACJ,GALa;AAOdG,EAAAA,kBAAkB,EAAGC,KAAD,IAAW;AAC3B,QAAIA,KAAK,KAAKH,SAAd,EAAyB;AACrB,aAAO,wJAAwJC,IAAxJ,CAA6JE,KAA7J,CAAP;AACH;;AAAA;AACJ,GAXa;AAadC,EAAAA,qBAAqB,EAAGC,QAAD,IAAc;AACjC,QAAIA,QAAQ,KAAKL,SAAjB,EAA4B;AACxB,aAAO,gEAAgEC,IAAhE,CAAqEI,QAArE,CAAP;AACH;;AAAA;AACJ,GAjBa;AAmBdC,EAAAA,4BAA4B,EAAE,CAACD,QAAD,EAAWE,eAAX,KAA+B;AACzD,QAAIF,QAAQ,KAAKL,SAAb,IAA0BO,eAAe,KAAKP,SAAlD,EAA6D;AACzD,aAAOK,QAAQ,KAAKE,eAApB;AACH;AACJ,GAvBa;AAyBdC,EAAAA,WAAW,EAAGC,MAAD,IAAY;AACrB,QAAIA,MAAM,KAAKT,SAAX,IAAwBS,MAAM,KAAK,EAAvC,EAA2C;AACvC,aAAO,IAAP;AACH;AACJ,GA7Ba;AA+BdC,EAAAA,SAAS,EAAGC,IAAD,IAAU;AACjB;AACA;AAEA,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,WAAX,CAAuB,IAAID,IAAJ,GAAWE,WAAX,KAA0B,EAAjD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,QAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,IAAIJ,IAAJ,CAASF,IAAT,EAAeO,OAAf,KAA2B,IAAvD;;AAEA,QAAIP,IAAI,KAAKX,SAAT,IAAsBW,IAAI,GAAGC,QAAjC,EAA2C;AACvC,aAAO,IAAP;AACH;AACJ,GA1Ca;AA4CdO,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,QAAQ,KAAzB,IAAkC,KAA7C,CAAP;AACH,GA9Ca;AAgDdC,EAAAA,SAAS,EAAE,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC5B,WAAOD,IAAI,KAAKC,SAAhB;AACH;AAlDa,CAAlB;AAqDA,eAAe5B,SAAf","sourcesContent":["const utilities = {\n    checkPersonal: (input) => {\n        if (input !== undefined) {\n            return /^[\\p{L}\\p{N}*-]+$/u.test(input)\n        };\n    },\n\n    checkEmailValidity: (email) => {\n        if (email !== undefined) {\n            return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\n        };\n    },\n\n    checkPasswordValidity: (password) => {\n        if (password !== undefined) {\n            return /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.,!@#$%^&*])(?=.{8,})/.test(password);\n        };\n    },\n\n    checkConfirmPasswordValidity: (password, confirmPassword) => {\n        if (password !== undefined && confirmPassword !== undefined) {\n            return password === confirmPassword;\n        }\n    },\n\n    checkGender: (gender) => {\n        if (gender !== undefined && gender !== '') {\n            return true;\n        }\n    },\n\n    checkDate: (date) => {\n        // let today = (new Date()).toISOString().slice(0, 10)\n        // console.log(\"data di oggi\", today) // 2021/09/13\n\n        let yearsAgo = new Date().setFullYear(new Date().getFullYear() -16)\n        console.log('data:', yearsAgo)\n        console.log('date in arg:', new Date(date).getTime() / 1000)\n        \n        if (date !== undefined && date > yearsAgo) {\n            return true;\n        }\n    },\n\n    generateCode: () => {\n        return Math.floor(Math.random() * (99999 - 10000) + 10000);\n    },\n\n    checkCode: (code, codeInput) => {\n        return code === codeInput;\n    }\n};\n\nexport default utilities;"]},"metadata":{},"sourceType":"module"}